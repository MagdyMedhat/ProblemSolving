
// LCS Problem  D & C and DP

#include <iostream>
#include <string>
#include <fstream>
using namespace std;

ifstream fin("input.txt");
#define cin fin

int LCS(string& str1,string& str2,int s1,int s2)
{
	if (s1==-1 || s2==-1)
		return 0;

	if (str1[s1] == str2[s2])
		return 1 + LCS(str1,str2,s1-1,s2-1);

	else return max( LCS(str1,str2,s1,s2-1) , LCS(str1,str2,s1-1,s2) );
}

int DP [100][100];

int LCS_DP(string& str1,string& str2,int s1,int s2)
{
	for (int i=0;i<=s1;i++)
	{
		for (int j=0;j<=s2;j++)
		{
			if (i == 0 || j == 0)
				DP[i][j] = 0;

			else if (str1[i-1] == str2[j-1])
				DP[i][j] = 1 + DP[i-1][j-1];

			else
				DP[i][j] = max ( DP[i][j-1] , DP[i-1][j]);
		}
	}

	return DP[s1][s2];
}

void DisplayTable(string& str1,string& str2)
{
	cout << "  - ";

	for (int j=0;j<=str2.size();j++)
		cout << str2[j] << " ";
	
	cout << endl;

	for (int i=0;i<=str1.size();i++)
	{
		if (i==0)
			cout << "- ";
		else
			cout << str1[i-1] << " ";

		for (int j=0;j<=str2.size();j++)
			cout << DP[i][j] << " ";

		cout << endl;
	}
}

int main ()
{
	string str1 = "Magdy";
	string str2 = "Maged";

	cout << LCS_DP( str1 , str2 , str1.size() , str2.size() ) << endl;

	DisplayTable(str1,str2);

	return 0;
}